# Makefile.in generated by automake 1.10.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/tsim
pkglibdir = $(libdir)/tsim
pkgincludedir = $(includedir)/tsim
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = tsim$(EXEEXT)
subdir = src
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_tsim_OBJECTS = tsim-AddToggleWidget.$(OBJEXT) \
	tsim-DialogPopup.$(OBJEXT) tsim-file.$(OBJEXT) \
	tsim-resources.$(OBJEXT) tsim-timer.$(OBJEXT) \
	tsim-tsim.$(OBJEXT) tsim-bitmap.$(OBJEXT) \
	tsim-DrawingPalette.$(OBJEXT) tsim-Graph.$(OBJEXT) \
	tsim-sound.$(OBJEXT) tsim-train.$(OBJEXT) \
	tsim-BitmapDirectory.$(OBJEXT) tsim-errcheck.$(OBJEXT) \
	tsim-pipe.$(OBJEXT) tsim-Sprite.$(OBJEXT) \
	tsim-tsim_argp.$(OBJEXT)
tsim_OBJECTS = $(am_tsim_OBJECTS)
tsim_LDADD = $(LDADD)
tsim_LINK = $(CCLD) $(tsim_CFLAGS) $(CFLAGS) $(tsim_LDFLAGS) \
	$(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(tsim_SOURCES)
DIST_SOURCES = $(tsim_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/noahsu/tsim-0.84/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/noahsu/tsim-0.84/missing --run tar
AUTOCONF = ${SHELL} /home/noahsu/tsim-0.84/missing --run autoconf
AUTOHEADER = ${SHELL} /home/noahsu/tsim-0.84/missing --run autoheader
AUTOMAKE = ${SHELL} /home/noahsu/tsim-0.84/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = -lXt -lXmu -lXext -lXaw -lX11 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/noahsu/tsim-0.84/missing --run makeinfo
MKDIR_P = /usr/bin/mkdir -p
OBJEXT = o
PACKAGE = tsim
PACKAGE_BUGREPORT = staffan.bjornesjo@gmail.com
PACKAGE_NAME = tsim
PACKAGE_STRING = tsim 0.84
PACKAGE_TARNAME = tsim
PACKAGE_VERSION = 0.84
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 0.84
XMKMF = 
abs_builddir = /home/noahsu/tsim-0.84/src
abs_srcdir = /home/noahsu/tsim-0.84/src
abs_top_builddir = /home/noahsu/tsim-0.84
abs_top_srcdir = /home/noahsu/tsim-0.84
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/noahsu/tsim-0.84/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /usr/bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = ..
tsim_SOURCES = AddToggleWidget.c DialogPopup.c file.c resources.c timer.c \
               tsim.c bitmap.c DrawingPalette.c Graph.c sound.c train.c \
               BitmapDirectory.c errcheck.c pipe.c Sprite.c tsim_argp.c

noinst_HEADERS = AddToggleWidget.h DialogPopup.h file.h resources.h \
         timer.h general.h bitmap.h DrawingPalette.h Graph.h sound.h train.h \
         BitmapDirectory.h errcheck.h pipe.h Sprite.h tsim_argp.h

tsim_CFLAGS = -std=gnu99 -pedantic -Wall -Wextra -Wmissing-prototypes \
              -DRESDIR=\"${datadir}/tsim\"

tsim_LDFLAGS = -L/usr/X11R6/lib -lXaw -lXt -lXmu -lX11 -lXext
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
tsim$(EXEEXT): $(tsim_OBJECTS) $(tsim_DEPENDENCIES) 
	@rm -f tsim$(EXEEXT)
	$(tsim_LINK) $(tsim_OBJECTS) $(tsim_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/tsim-AddToggleWidget.Po
include ./$(DEPDIR)/tsim-BitmapDirectory.Po
include ./$(DEPDIR)/tsim-DialogPopup.Po
include ./$(DEPDIR)/tsim-DrawingPalette.Po
include ./$(DEPDIR)/tsim-Graph.Po
include ./$(DEPDIR)/tsim-Sprite.Po
include ./$(DEPDIR)/tsim-bitmap.Po
include ./$(DEPDIR)/tsim-errcheck.Po
include ./$(DEPDIR)/tsim-file.Po
include ./$(DEPDIR)/tsim-pipe.Po
include ./$(DEPDIR)/tsim-resources.Po
include ./$(DEPDIR)/tsim-sound.Po
include ./$(DEPDIR)/tsim-timer.Po
include ./$(DEPDIR)/tsim-train.Po
include ./$(DEPDIR)/tsim-tsim.Po
include ./$(DEPDIR)/tsim-tsim_argp.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

tsim-AddToggleWidget.o: AddToggleWidget.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-AddToggleWidget.o -MD -MP -MF $(DEPDIR)/tsim-AddToggleWidget.Tpo -c -o tsim-AddToggleWidget.o `test -f 'AddToggleWidget.c' || echo '$(srcdir)/'`AddToggleWidget.c
	mv -f $(DEPDIR)/tsim-AddToggleWidget.Tpo $(DEPDIR)/tsim-AddToggleWidget.Po
#	source='AddToggleWidget.c' object='tsim-AddToggleWidget.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-AddToggleWidget.o `test -f 'AddToggleWidget.c' || echo '$(srcdir)/'`AddToggleWidget.c

tsim-AddToggleWidget.obj: AddToggleWidget.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-AddToggleWidget.obj -MD -MP -MF $(DEPDIR)/tsim-AddToggleWidget.Tpo -c -o tsim-AddToggleWidget.obj `if test -f 'AddToggleWidget.c'; then $(CYGPATH_W) 'AddToggleWidget.c'; else $(CYGPATH_W) '$(srcdir)/AddToggleWidget.c'; fi`
	mv -f $(DEPDIR)/tsim-AddToggleWidget.Tpo $(DEPDIR)/tsim-AddToggleWidget.Po
#	source='AddToggleWidget.c' object='tsim-AddToggleWidget.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-AddToggleWidget.obj `if test -f 'AddToggleWidget.c'; then $(CYGPATH_W) 'AddToggleWidget.c'; else $(CYGPATH_W) '$(srcdir)/AddToggleWidget.c'; fi`

tsim-DialogPopup.o: DialogPopup.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-DialogPopup.o -MD -MP -MF $(DEPDIR)/tsim-DialogPopup.Tpo -c -o tsim-DialogPopup.o `test -f 'DialogPopup.c' || echo '$(srcdir)/'`DialogPopup.c
	mv -f $(DEPDIR)/tsim-DialogPopup.Tpo $(DEPDIR)/tsim-DialogPopup.Po
#	source='DialogPopup.c' object='tsim-DialogPopup.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-DialogPopup.o `test -f 'DialogPopup.c' || echo '$(srcdir)/'`DialogPopup.c

tsim-DialogPopup.obj: DialogPopup.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-DialogPopup.obj -MD -MP -MF $(DEPDIR)/tsim-DialogPopup.Tpo -c -o tsim-DialogPopup.obj `if test -f 'DialogPopup.c'; then $(CYGPATH_W) 'DialogPopup.c'; else $(CYGPATH_W) '$(srcdir)/DialogPopup.c'; fi`
	mv -f $(DEPDIR)/tsim-DialogPopup.Tpo $(DEPDIR)/tsim-DialogPopup.Po
#	source='DialogPopup.c' object='tsim-DialogPopup.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-DialogPopup.obj `if test -f 'DialogPopup.c'; then $(CYGPATH_W) 'DialogPopup.c'; else $(CYGPATH_W) '$(srcdir)/DialogPopup.c'; fi`

tsim-file.o: file.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-file.o -MD -MP -MF $(DEPDIR)/tsim-file.Tpo -c -o tsim-file.o `test -f 'file.c' || echo '$(srcdir)/'`file.c
	mv -f $(DEPDIR)/tsim-file.Tpo $(DEPDIR)/tsim-file.Po
#	source='file.c' object='tsim-file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-file.o `test -f 'file.c' || echo '$(srcdir)/'`file.c

tsim-file.obj: file.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-file.obj -MD -MP -MF $(DEPDIR)/tsim-file.Tpo -c -o tsim-file.obj `if test -f 'file.c'; then $(CYGPATH_W) 'file.c'; else $(CYGPATH_W) '$(srcdir)/file.c'; fi`
	mv -f $(DEPDIR)/tsim-file.Tpo $(DEPDIR)/tsim-file.Po
#	source='file.c' object='tsim-file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-file.obj `if test -f 'file.c'; then $(CYGPATH_W) 'file.c'; else $(CYGPATH_W) '$(srcdir)/file.c'; fi`

tsim-resources.o: resources.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-resources.o -MD -MP -MF $(DEPDIR)/tsim-resources.Tpo -c -o tsim-resources.o `test -f 'resources.c' || echo '$(srcdir)/'`resources.c
	mv -f $(DEPDIR)/tsim-resources.Tpo $(DEPDIR)/tsim-resources.Po
#	source='resources.c' object='tsim-resources.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-resources.o `test -f 'resources.c' || echo '$(srcdir)/'`resources.c

tsim-resources.obj: resources.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-resources.obj -MD -MP -MF $(DEPDIR)/tsim-resources.Tpo -c -o tsim-resources.obj `if test -f 'resources.c'; then $(CYGPATH_W) 'resources.c'; else $(CYGPATH_W) '$(srcdir)/resources.c'; fi`
	mv -f $(DEPDIR)/tsim-resources.Tpo $(DEPDIR)/tsim-resources.Po
#	source='resources.c' object='tsim-resources.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-resources.obj `if test -f 'resources.c'; then $(CYGPATH_W) 'resources.c'; else $(CYGPATH_W) '$(srcdir)/resources.c'; fi`

tsim-timer.o: timer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-timer.o -MD -MP -MF $(DEPDIR)/tsim-timer.Tpo -c -o tsim-timer.o `test -f 'timer.c' || echo '$(srcdir)/'`timer.c
	mv -f $(DEPDIR)/tsim-timer.Tpo $(DEPDIR)/tsim-timer.Po
#	source='timer.c' object='tsim-timer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-timer.o `test -f 'timer.c' || echo '$(srcdir)/'`timer.c

tsim-timer.obj: timer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-timer.obj -MD -MP -MF $(DEPDIR)/tsim-timer.Tpo -c -o tsim-timer.obj `if test -f 'timer.c'; then $(CYGPATH_W) 'timer.c'; else $(CYGPATH_W) '$(srcdir)/timer.c'; fi`
	mv -f $(DEPDIR)/tsim-timer.Tpo $(DEPDIR)/tsim-timer.Po
#	source='timer.c' object='tsim-timer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-timer.obj `if test -f 'timer.c'; then $(CYGPATH_W) 'timer.c'; else $(CYGPATH_W) '$(srcdir)/timer.c'; fi`

tsim-tsim.o: tsim.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-tsim.o -MD -MP -MF $(DEPDIR)/tsim-tsim.Tpo -c -o tsim-tsim.o `test -f 'tsim.c' || echo '$(srcdir)/'`tsim.c
	mv -f $(DEPDIR)/tsim-tsim.Tpo $(DEPDIR)/tsim-tsim.Po
#	source='tsim.c' object='tsim-tsim.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-tsim.o `test -f 'tsim.c' || echo '$(srcdir)/'`tsim.c

tsim-tsim.obj: tsim.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-tsim.obj -MD -MP -MF $(DEPDIR)/tsim-tsim.Tpo -c -o tsim-tsim.obj `if test -f 'tsim.c'; then $(CYGPATH_W) 'tsim.c'; else $(CYGPATH_W) '$(srcdir)/tsim.c'; fi`
	mv -f $(DEPDIR)/tsim-tsim.Tpo $(DEPDIR)/tsim-tsim.Po
#	source='tsim.c' object='tsim-tsim.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-tsim.obj `if test -f 'tsim.c'; then $(CYGPATH_W) 'tsim.c'; else $(CYGPATH_W) '$(srcdir)/tsim.c'; fi`

tsim-bitmap.o: bitmap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-bitmap.o -MD -MP -MF $(DEPDIR)/tsim-bitmap.Tpo -c -o tsim-bitmap.o `test -f 'bitmap.c' || echo '$(srcdir)/'`bitmap.c
	mv -f $(DEPDIR)/tsim-bitmap.Tpo $(DEPDIR)/tsim-bitmap.Po
#	source='bitmap.c' object='tsim-bitmap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-bitmap.o `test -f 'bitmap.c' || echo '$(srcdir)/'`bitmap.c

tsim-bitmap.obj: bitmap.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-bitmap.obj -MD -MP -MF $(DEPDIR)/tsim-bitmap.Tpo -c -o tsim-bitmap.obj `if test -f 'bitmap.c'; then $(CYGPATH_W) 'bitmap.c'; else $(CYGPATH_W) '$(srcdir)/bitmap.c'; fi`
	mv -f $(DEPDIR)/tsim-bitmap.Tpo $(DEPDIR)/tsim-bitmap.Po
#	source='bitmap.c' object='tsim-bitmap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-bitmap.obj `if test -f 'bitmap.c'; then $(CYGPATH_W) 'bitmap.c'; else $(CYGPATH_W) '$(srcdir)/bitmap.c'; fi`

tsim-DrawingPalette.o: DrawingPalette.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-DrawingPalette.o -MD -MP -MF $(DEPDIR)/tsim-DrawingPalette.Tpo -c -o tsim-DrawingPalette.o `test -f 'DrawingPalette.c' || echo '$(srcdir)/'`DrawingPalette.c
	mv -f $(DEPDIR)/tsim-DrawingPalette.Tpo $(DEPDIR)/tsim-DrawingPalette.Po
#	source='DrawingPalette.c' object='tsim-DrawingPalette.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-DrawingPalette.o `test -f 'DrawingPalette.c' || echo '$(srcdir)/'`DrawingPalette.c

tsim-DrawingPalette.obj: DrawingPalette.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-DrawingPalette.obj -MD -MP -MF $(DEPDIR)/tsim-DrawingPalette.Tpo -c -o tsim-DrawingPalette.obj `if test -f 'DrawingPalette.c'; then $(CYGPATH_W) 'DrawingPalette.c'; else $(CYGPATH_W) '$(srcdir)/DrawingPalette.c'; fi`
	mv -f $(DEPDIR)/tsim-DrawingPalette.Tpo $(DEPDIR)/tsim-DrawingPalette.Po
#	source='DrawingPalette.c' object='tsim-DrawingPalette.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-DrawingPalette.obj `if test -f 'DrawingPalette.c'; then $(CYGPATH_W) 'DrawingPalette.c'; else $(CYGPATH_W) '$(srcdir)/DrawingPalette.c'; fi`

tsim-Graph.o: Graph.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-Graph.o -MD -MP -MF $(DEPDIR)/tsim-Graph.Tpo -c -o tsim-Graph.o `test -f 'Graph.c' || echo '$(srcdir)/'`Graph.c
	mv -f $(DEPDIR)/tsim-Graph.Tpo $(DEPDIR)/tsim-Graph.Po
#	source='Graph.c' object='tsim-Graph.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-Graph.o `test -f 'Graph.c' || echo '$(srcdir)/'`Graph.c

tsim-Graph.obj: Graph.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-Graph.obj -MD -MP -MF $(DEPDIR)/tsim-Graph.Tpo -c -o tsim-Graph.obj `if test -f 'Graph.c'; then $(CYGPATH_W) 'Graph.c'; else $(CYGPATH_W) '$(srcdir)/Graph.c'; fi`
	mv -f $(DEPDIR)/tsim-Graph.Tpo $(DEPDIR)/tsim-Graph.Po
#	source='Graph.c' object='tsim-Graph.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-Graph.obj `if test -f 'Graph.c'; then $(CYGPATH_W) 'Graph.c'; else $(CYGPATH_W) '$(srcdir)/Graph.c'; fi`

tsim-sound.o: sound.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-sound.o -MD -MP -MF $(DEPDIR)/tsim-sound.Tpo -c -o tsim-sound.o `test -f 'sound.c' || echo '$(srcdir)/'`sound.c
	mv -f $(DEPDIR)/tsim-sound.Tpo $(DEPDIR)/tsim-sound.Po
#	source='sound.c' object='tsim-sound.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-sound.o `test -f 'sound.c' || echo '$(srcdir)/'`sound.c

tsim-sound.obj: sound.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-sound.obj -MD -MP -MF $(DEPDIR)/tsim-sound.Tpo -c -o tsim-sound.obj `if test -f 'sound.c'; then $(CYGPATH_W) 'sound.c'; else $(CYGPATH_W) '$(srcdir)/sound.c'; fi`
	mv -f $(DEPDIR)/tsim-sound.Tpo $(DEPDIR)/tsim-sound.Po
#	source='sound.c' object='tsim-sound.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-sound.obj `if test -f 'sound.c'; then $(CYGPATH_W) 'sound.c'; else $(CYGPATH_W) '$(srcdir)/sound.c'; fi`

tsim-train.o: train.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-train.o -MD -MP -MF $(DEPDIR)/tsim-train.Tpo -c -o tsim-train.o `test -f 'train.c' || echo '$(srcdir)/'`train.c
	mv -f $(DEPDIR)/tsim-train.Tpo $(DEPDIR)/tsim-train.Po
#	source='train.c' object='tsim-train.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-train.o `test -f 'train.c' || echo '$(srcdir)/'`train.c

tsim-train.obj: train.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-train.obj -MD -MP -MF $(DEPDIR)/tsim-train.Tpo -c -o tsim-train.obj `if test -f 'train.c'; then $(CYGPATH_W) 'train.c'; else $(CYGPATH_W) '$(srcdir)/train.c'; fi`
	mv -f $(DEPDIR)/tsim-train.Tpo $(DEPDIR)/tsim-train.Po
#	source='train.c' object='tsim-train.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-train.obj `if test -f 'train.c'; then $(CYGPATH_W) 'train.c'; else $(CYGPATH_W) '$(srcdir)/train.c'; fi`

tsim-BitmapDirectory.o: BitmapDirectory.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-BitmapDirectory.o -MD -MP -MF $(DEPDIR)/tsim-BitmapDirectory.Tpo -c -o tsim-BitmapDirectory.o `test -f 'BitmapDirectory.c' || echo '$(srcdir)/'`BitmapDirectory.c
	mv -f $(DEPDIR)/tsim-BitmapDirectory.Tpo $(DEPDIR)/tsim-BitmapDirectory.Po
#	source='BitmapDirectory.c' object='tsim-BitmapDirectory.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-BitmapDirectory.o `test -f 'BitmapDirectory.c' || echo '$(srcdir)/'`BitmapDirectory.c

tsim-BitmapDirectory.obj: BitmapDirectory.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-BitmapDirectory.obj -MD -MP -MF $(DEPDIR)/tsim-BitmapDirectory.Tpo -c -o tsim-BitmapDirectory.obj `if test -f 'BitmapDirectory.c'; then $(CYGPATH_W) 'BitmapDirectory.c'; else $(CYGPATH_W) '$(srcdir)/BitmapDirectory.c'; fi`
	mv -f $(DEPDIR)/tsim-BitmapDirectory.Tpo $(DEPDIR)/tsim-BitmapDirectory.Po
#	source='BitmapDirectory.c' object='tsim-BitmapDirectory.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-BitmapDirectory.obj `if test -f 'BitmapDirectory.c'; then $(CYGPATH_W) 'BitmapDirectory.c'; else $(CYGPATH_W) '$(srcdir)/BitmapDirectory.c'; fi`

tsim-errcheck.o: errcheck.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-errcheck.o -MD -MP -MF $(DEPDIR)/tsim-errcheck.Tpo -c -o tsim-errcheck.o `test -f 'errcheck.c' || echo '$(srcdir)/'`errcheck.c
	mv -f $(DEPDIR)/tsim-errcheck.Tpo $(DEPDIR)/tsim-errcheck.Po
#	source='errcheck.c' object='tsim-errcheck.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-errcheck.o `test -f 'errcheck.c' || echo '$(srcdir)/'`errcheck.c

tsim-errcheck.obj: errcheck.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-errcheck.obj -MD -MP -MF $(DEPDIR)/tsim-errcheck.Tpo -c -o tsim-errcheck.obj `if test -f 'errcheck.c'; then $(CYGPATH_W) 'errcheck.c'; else $(CYGPATH_W) '$(srcdir)/errcheck.c'; fi`
	mv -f $(DEPDIR)/tsim-errcheck.Tpo $(DEPDIR)/tsim-errcheck.Po
#	source='errcheck.c' object='tsim-errcheck.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-errcheck.obj `if test -f 'errcheck.c'; then $(CYGPATH_W) 'errcheck.c'; else $(CYGPATH_W) '$(srcdir)/errcheck.c'; fi`

tsim-pipe.o: pipe.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-pipe.o -MD -MP -MF $(DEPDIR)/tsim-pipe.Tpo -c -o tsim-pipe.o `test -f 'pipe.c' || echo '$(srcdir)/'`pipe.c
	mv -f $(DEPDIR)/tsim-pipe.Tpo $(DEPDIR)/tsim-pipe.Po
#	source='pipe.c' object='tsim-pipe.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-pipe.o `test -f 'pipe.c' || echo '$(srcdir)/'`pipe.c

tsim-pipe.obj: pipe.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-pipe.obj -MD -MP -MF $(DEPDIR)/tsim-pipe.Tpo -c -o tsim-pipe.obj `if test -f 'pipe.c'; then $(CYGPATH_W) 'pipe.c'; else $(CYGPATH_W) '$(srcdir)/pipe.c'; fi`
	mv -f $(DEPDIR)/tsim-pipe.Tpo $(DEPDIR)/tsim-pipe.Po
#	source='pipe.c' object='tsim-pipe.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-pipe.obj `if test -f 'pipe.c'; then $(CYGPATH_W) 'pipe.c'; else $(CYGPATH_W) '$(srcdir)/pipe.c'; fi`

tsim-Sprite.o: Sprite.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-Sprite.o -MD -MP -MF $(DEPDIR)/tsim-Sprite.Tpo -c -o tsim-Sprite.o `test -f 'Sprite.c' || echo '$(srcdir)/'`Sprite.c
	mv -f $(DEPDIR)/tsim-Sprite.Tpo $(DEPDIR)/tsim-Sprite.Po
#	source='Sprite.c' object='tsim-Sprite.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-Sprite.o `test -f 'Sprite.c' || echo '$(srcdir)/'`Sprite.c

tsim-Sprite.obj: Sprite.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-Sprite.obj -MD -MP -MF $(DEPDIR)/tsim-Sprite.Tpo -c -o tsim-Sprite.obj `if test -f 'Sprite.c'; then $(CYGPATH_W) 'Sprite.c'; else $(CYGPATH_W) '$(srcdir)/Sprite.c'; fi`
	mv -f $(DEPDIR)/tsim-Sprite.Tpo $(DEPDIR)/tsim-Sprite.Po
#	source='Sprite.c' object='tsim-Sprite.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-Sprite.obj `if test -f 'Sprite.c'; then $(CYGPATH_W) 'Sprite.c'; else $(CYGPATH_W) '$(srcdir)/Sprite.c'; fi`

tsim-tsim_argp.o: tsim_argp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-tsim_argp.o -MD -MP -MF $(DEPDIR)/tsim-tsim_argp.Tpo -c -o tsim-tsim_argp.o `test -f 'tsim_argp.c' || echo '$(srcdir)/'`tsim_argp.c
	mv -f $(DEPDIR)/tsim-tsim_argp.Tpo $(DEPDIR)/tsim-tsim_argp.Po
#	source='tsim_argp.c' object='tsim-tsim_argp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-tsim_argp.o `test -f 'tsim_argp.c' || echo '$(srcdir)/'`tsim_argp.c

tsim-tsim_argp.obj: tsim_argp.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -MT tsim-tsim_argp.obj -MD -MP -MF $(DEPDIR)/tsim-tsim_argp.Tpo -c -o tsim-tsim_argp.obj `if test -f 'tsim_argp.c'; then $(CYGPATH_W) 'tsim_argp.c'; else $(CYGPATH_W) '$(srcdir)/tsim_argp.c'; fi`
	mv -f $(DEPDIR)/tsim-tsim_argp.Tpo $(DEPDIR)/tsim-tsim_argp.Po
#	source='tsim_argp.c' object='tsim-tsim_argp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(tsim_CFLAGS) $(CFLAGS) -c -o tsim-tsim_argp.obj `if test -f 'tsim_argp.c'; then $(CYGPATH_W) 'tsim_argp.c'; else $(CYGPATH_W) '$(srcdir)/tsim_argp.c'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
